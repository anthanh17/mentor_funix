# -*- coding: utf-8 -*-
"""Lab 12.2 Kế thừa trong Python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ieRDjLGRwF4t1lhv8OnWTDyNSWyXJsKy

# Lab 12.2: Kế thừa trong Python

Ở bài Lab này, bạn sẽ cần hoàn thành các đoạn code ở phần `[...]` để hoàn thiện bài toán theo yêu cầu từ đề bài.

Bạn được tạo sẵn Class `Pokemon` được sử dụng để mô tả một Pokemon như đoạn code bên dưới. Bạn hãy bổ sung thêm các hàm như sau:
1. `update()`: Thiết lập các chỉ số của Pokemon về như sau: `health_boost = 5; attack_boost = 3; defense_boost = 2; evolve = 10`.
2. `attack_up()`: Tăng chỉ số `attack` của Pokemon = `attack + attack_boost` và trả về chỉ số `attack` mới.
3. `defense_up()`: Tăng chỉ số `defense` của Pokemon = `defense + defense_boost` và trả về chỉ số `defense` mới.
4. `health_up()`: Tăng chỉ số `health` của Pokemon = `health + health_boost` và trả về chỉ số `health` mới.
"""



class Pokemon(object):
    attack = 12
    defense = 10
    health = 15
    p_type = "Normal"

    health_boost  = 0
    attack_boost  = 0
    defense_boost = 0
    evolve  = 0
    name = ""
    level = 0

    def __init__(self, name, level = 5):
        self.name = name
        self.level = level

    def train(self):
        self.update()
        self.attack_up()
        self.defense_up()
        self.health_up()
        self.level = self.level + 1
        if self.level%self.evolve == 0:
            return self.level, "Evolved!"
        else:
            return self.level

    def attack_up(self):
        return self.attack + self.attack_boost

    def defense_up(self):
        return self.defense + self.defense_boost

    def health_up(self):
        return self.health + self.health_boost

    def update(self):
        self.health_boost = 5
        self.attack_boost = 3
        self.defense_boost = 2
        self.evolve = 10

    def __str__(self):
        self.update()
        return "Pokemon name: {}, Type: {}, Level: {}\r\nAttack: {}, Defense: {}, Health: {}".format(self.name, self.p_type, self.level, self.attack, self.defense, self.health)

"""Kiểm tra đoạn code đã hoạt động đúng chưa."""

pokemon = Pokemon('Alomomola', 9)
print(pokemon)
print('------')
print('Traning: ', pokemon.train())
print('------')
print(pokemon)

"""Tạo một Class `Grass_Pokemon` được kế thừa từ `Pokemon` với các thay đổi như sau: 

1. Các thuộc tính sẽ có giá trị ban đầu như sau `attack = 15; defense = 14; health = 12; p_type = "Grass"`.
2. Ghi đè lại hàm `update` để thay đôi các chỉ số như sau `health_boost = 6; attack_boost = 2; defense_boost = 3; evolve = 12`.
3. Ghi đè lại hàm `train` để chỉ số `attack` chỉ tăng khi `level > 10`.
4. Bổ sung thêm 2 thuộc tính là `weak` và `strong`.

"""

class Grass_Pokemon(Pokemon):
    attack = 15
    defense = 14
    health = 12
    p_type = "Grass"
    weak = ""
    strong = ""

    def update(self):
        self.health_boost = 6
        self.attack_boost = 2
        self.defense_boost = 3
        self.evolve = 112

    def __init__(self, name,level = 5):
        super().__init__(name, level = 5)
        self.weak = "Dark"
        self.strong = "Psychic"

    def train(self):
        if self.level > 10:
          self.attack += 1

    def moves(self):
        self.p_moves = ["razor leaf", "synthesis", "petal dance"]

    def action(self):
        return self.name + " knows a lot of different moves!"

"""Kiểm tra đoạn code đã hoạt động đúng chưa."""

p1 = Grass_Pokemon('Petilil', 9)
print(p1)
print('------')
print('Traning: ', p1.train())
print('------')
print(p1)
print('------')
print('Traning: ', p1.train())
print('------')
print(p1)

"""Tạo thêm 3 Class mới được kế thừa từ Class `Pokemon` như sau:

1. Class `Ghost_Pokemon` với `p_type = "Ghost"; weak = "Dark"; strong = "Psychic"`.
2. Class `Fire_Pokemon` với `p_type = "Fire"; weak = "Water"; strong = "Grass"`.
3. Class `Flying_Pokemon` với `p_type = "Flying"; weak = "Electric"; strong = "Fighting"`.
"""

class Ghost_Pokemon(Pokemon):
    p_type = "Ghost"
    weak = "Dark"
    strong = "Psychic"

    def __init__(self, name,level = 5):
        super().__init__(name, level = 5)

class Fire_Pokemon(Pokemon):
    p_type = "Fire"
    weak = "Water"
    strong = "Grass"

    def __init__(self, name,level = 5):
        super().__init__(name, level = 5)

class Flying_Pokemon(Pokemon):
    p_type = "Flying"
    weak = "Electric"
    strong = "Fighting"

    def __init__(self, name,level = 5):
        super().__init__(name, level = 5)

"""Kiểm tra đoạn code đã hoạt động đúng chưa."""

print(Ghost_Pokemon('Cofagrigus', 10))
print(Fire_Pokemon('Reshiram', 12))
print(Ghost_Pokemon('Zapdos', 9))